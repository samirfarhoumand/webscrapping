# Group by category and sum the # of unique restaurants of each category
separate_rows(., category, sep = ",") %>%
group_by(category)%>%
mutate(t = n_distinct(ID))%>%
# Need to ungroup to filter down to the top 3/4's of the restaurants
ungroup()%>%
filter(t >= quantile(t, .02))%>%
# Now we regroup by category and star so we can calculate the total number
# of reviews category X had for 1, 2, 3, etc stars
# Looks as follows eg:
# Gym: 1 star, 1234 reviews
# Gym: 2 star, 1494 reviews
# Gym: 3 star, 2003 reviews
# Gym: 4 star, 2500 reviews
# Gym: 5 star, 750 reviews
group_by(category, rating)%>%
summarise(count = n())%>%
# redo grouping by just category
ungroup()%>%
group_by(category)%>%
# grab the avg rating for each category NOTE this way sucks, I need a better way to do it
mutate(working = rating*count, avg = sum(working)/sum(count))%>%
# clean up df
select(-working)%>%
# sort by categorey and rating
arrange(category, rating)
t <- yelp %>%
# Group by category and sum the # of unique restaurants of each category
separate_rows(., category, sep = ",") %>%
group_by(category)%>%
mutate(t = n_distinct(ID))%>%
# Need to ungroup to filter down to the top 3/4's of the restaurants
ungroup()%>%
# Now we regroup by category and star so we can calculate the total number
# of reviews category X had for 1, 2, 3, etc stars
# Looks as follows eg:
# Gym: 1 star, 1234 reviews
# Gym: 2 star, 1494 reviews
# Gym: 3 star, 2003 reviews
# Gym: 4 star, 2500 reviews
# Gym: 5 star, 750 reviews
group_by(category, rating)%>%
summarise(count = n())%>%
# redo grouping by just category
ungroup()%>%
group_by(category)%>%
# grab the avg rating for each category NOTE this way sucks, I need a better way to do it
mutate(working = rating*count, avg = sum(working)/sum(count))%>%
# clean up df
select(-working)%>%
# sort by categorey and rating
arrange(category, rating)
rankings <- t %>%
distinct(category, .keep_all = TRUE)%>%
select(category, avg)%>%
arrange(desc(avg))
t$category <- factor(t$category, levels = rev(rankings$category))
ggplot(t, aes(x = category, y = count, fill = as.factor(rating)))+
geom_bar(stat = 'identity', position = 'fill', alpha = .8)+
coord_flip()+
# this percent labeling requires scales package
scale_y_continuous(labels = percent)+
theme(legend.title = element_blank(),
legend.position="top",
legend.direction="horizontal",
legend.key.width=unit(0.75, "cm"),
legend.key.height=unit(0.1, "cm"),
legend.margin=margin(0, 0, -0.1, -2, "cm"))+
scale_fill_manual(values=colors, labels = c("1 Star", "2 Star", "3 Star", "4 Star", "5 Star"))+
labs(y = 'Proportion of Reviews',
x = '',
title = 'Yelp Reviews by Gym Category')
ggplot(t, aes(x = category, y = count, fill = as.factor(rating)))+
geom_bar(stat = 'identity', position = 'fill', alpha = .8)+
coord_flip()+
# this percent labeling requires scales package
scale_y_continuous(labels = "percent")+
theme(legend.title = element_blank(),
legend.position="top",
legend.direction="horizontal",
legend.key.width=unit(0.75, "cm"),
legend.key.height=unit(0.1, "cm"),
legend.margin=margin(0, 0, -0.1, -2, "cm"))+
scale_fill_manual(values=colors, labels = c("1 Star", "2 Star", "3 Star", "4 Star", "5 Star"))+
labs(y = 'Proportion of Reviews',
x = '',
title = 'Yelp Reviews by Gym Category')
ggplot(t, aes(x = category, y = count, fill = as.factor(rating)))+
geom_bar(stat = 'identity', position = 'fill', alpha = .8)+
coord_flip()
t <- yelp %>%
# Group by category and sum the # of unique restaurants of each category
separate_rows(., category, sep = ",") %>%
group_by(category)%>%
mutate(t = n_distinct(ID))%>%
# Need to ungroup to filter down to the top 3/4's of the restaurants
ungroup()%>%
filter(t >= quantile(t, .05))%>%
# Now we regroup by category and star so we can calculate the total number
# of reviews category X had for 1, 2, 3, etc stars
# Looks as follows eg:
# Gym: 1 star, 1234 reviews
# Gym: 2 star, 1494 reviews
# Gym: 3 star, 2003 reviews
# Gym: 4 star, 2500 reviews
# Gym: 5 star, 750 reviews
group_by(category, rating)%>%
summarise(count = n())%>%
# redo grouping by just category
ungroup()%>%
group_by(category)%>%
# grab the avg rating for each category NOTE this way sucks, I need a better way to do it
mutate(working = rating*count, avg = sum(working)/sum(count))%>%
# clean up df
select(-working)%>%
# sort by categorey and rating
arrange(category, rating)
rankings <- t %>%
distinct(category, .keep_all = TRUE)%>%
select(category, avg)%>%
arrange(desc(avg))
t$category <- factor(t$category, levels = rev(rankings$category))
ggplot(t, aes(x = category, y = count, fill = as.factor(rating)))+
geom_bar(stat = 'identity', position = 'fill', alpha = .8)+
coord_flip()
t <- yelp %>%
# Group by category and sum the # of unique restaurants of each category
separate_rows(., category, sep = ",") %>%
group_by(category)%>%
mutate(t = n_distinct(ID))%>%
# Need to ungroup to filter down to the top 3/4's of the restaurants
ungroup()%>%
filter(t >= quantile(t, .10))%>%
# Now we regroup by category and star so we can calculate the total number
# of reviews category X had for 1, 2, 3, etc stars
# Looks as follows eg:
# Gym: 1 star, 1234 reviews
# Gym: 2 star, 1494 reviews
# Gym: 3 star, 2003 reviews
# Gym: 4 star, 2500 reviews
# Gym: 5 star, 750 reviews
group_by(category, rating)%>%
summarise(count = n())%>%
# redo grouping by just category
ungroup()%>%
group_by(category)%>%
# grab the avg rating for each category NOTE this way sucks, I need a better way to do it
mutate(working = rating*count, avg = sum(working)/sum(count))%>%
# clean up df
select(-working)%>%
# sort by categorey and rating
arrange(category, rating)
rankings <- t %>%
distinct(category, .keep_all = TRUE)%>%
select(category, avg)%>%
arrange(desc(avg))
t$category <- factor(t$category, levels = rev(rankings$category))
ggplot(t, aes(x = category, y = count, fill = as.factor(rating)))+
geom_bar(stat = 'identity', position = 'fill', alpha = .8)+
coord_flip()
ggplot(t, aes(x = category, y = count, fill = as.factor(rating)))+
geom_bar(stat = 'identity', position = 'fill', alpha = .8)+
coord_flip()+
# this percent labeling requires scales package
scale_y_continuous(labels = "percent")
ggplot(t, aes(x = category, y = count, fill = as.factor(rating)))+
geom_bar(stat = 'identity', position = 'fill', alpha = .8)+
coord_flip()+
# this percent labeling requires scales package
theme(legend.title = element_blank(),
legend.position="top",
legend.direction="horizontal",
legend.key.width=unit(0.75, "cm"),
legend.key.height=unit(0.1, "cm"),
legend.margin=margin(0, 0, -0.1, -2, "cm"))+
scale_fill_manual(values=colors, labels = c("1 Star", "2 Star", "3 Star", "4 Star", "5 Star"))+
labs(y = 'Proportion of Reviews',
x = '',
title = 'Yelp Reviews by Gym Category')
runApp('~/Desktop/nyc/Shiny/shinyproject/ufos')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
yelp%>%
filter(., num_review > 50) %>%
group_by(., ID, gym) %>%
summarise(., true_rating = mean(rating)) %>%
arrange(., true_rating) %>%
head(10)
yelp%>%
filter(., num_review > 50) %>%
group_by(., ID, gym) %>%
summarise(., true_rating = mean(rating)) %>%
arrange(., true_rating) %>%
head(10) %>%
ggplot(., aes(x = gym, y = true_rating)) + geom_bar(stat = "identity")
yelp%>%
filter(., num_review > 50) %>%
group_by(., ID, gym) %>%
summarise(., true_rating = mean(rating)) %>%
arrange(., true_rating) %>%
head(10) %>%
ggplot(., aes(x = gym, y = true_rating)) + geom_bar(stat = "identity")+
coord_flip()
yelp%>%
filter(., num_review > 50) %>%
group_by(., ID, gym) %>%
summarise(., true_rating = mean(rating)) %>%
arrange(., true_rating) %>%
head(10) %>%
ggplot(., aes(x=reorder(gym, value), y = true_rating)) + geom_bar(stat = "identity")+
coord_flip()
yelp%>%
filter(., num_review > 50) %>%
group_by(., ID, gym) %>%
summarise(., true_rating = mean(rating)) %>%
arrange(., true_rating) %>%
head(10) %>%
ggplot(., aes(x=reorder(gym, true_rating), y = true_rating)) + geom_bar(stat = "identity")+
coord_flip()
yelp%>%
filter(., num_review > 50) %>%
group_by(., ID, gym) %>%
summarise(., true_rating = mean(rating)) %>%
arrange(., true_rating) %>%
head(10) %>%
ggplot(., aes(x=reorder(gym, true_rating), y = true_rating)) + geom_bar(stat = "identity")+
coord_flip()+
labs(y = 'Average Rating,
x = '',
title = 'Yelp Reviews by Gym Category')
yelp%>%
filter(., num_review > 50) %>%
group_by(., ID, gym) %>%
summarise(., true_rating = mean(rating)) %>%
arrange(., true_rating) %>%
head(10) %>%
ggplot(., aes(x=reorder(gym, true_rating), y = true_rating)) + geom_bar(stat = "identity")+
coord_flip()+
labs(y = 'Average Rating',
x = '',
title = 'Yelp Reviews by Gym Category')
yelp%>%
filter(., num_review > 50) %>%
group_by(., ID, gym) %>%
summarise(., true_rating = mean(rating)) %>%
arrange(., true_rating) %>%
head(10) %>%
ggplot(., aes(x=reorder(gym, true_rating), y = true_rating)) +
geom_bar(stat = "identity", color = "red")+
coord_flip()+
labs(y = 'Average Rating',
x = '',
title = 'Yelp Reviews by Gym Category')
yelp%>%
filter(., num_review > 50) %>%
group_by(., ID, gym) %>%
summarise(., true_rating = mean(rating)) %>%
arrange(., true_rating) %>%
head(10) %>%
ggplot(., aes(x=reorder(gym, true_rating), y = true_rating)) +
geom_bar(stat = "identity", fill = "red")+
coord_flip()+
labs(y = 'Average Rating',
x = '',
title = 'Yelp Reviews by Gym Category')
yelp%>%
filter(., num_review > 50) %>%
group_by(., ID, gym) %>%
summarise(., true_rating = mean(rating)) %>%
arrange(., true_rating) %>%
head(10) %>%
ggplot(., aes(x=reorder(gym, -true_rating), y = true_rating)) +
geom_bar(stat = "identity", fill = "red")+
coord_flip()+
labs(y = 'Average Rating',
x = '',
title = 'Yelp Reviews by Gym Category')
yelp%>%
filter(., num_review > 50) %>%
group_by(., ID, gym) %>%
summarise(., true_rating = mean(rating)) %>%
arrange(., true_rating) %>%
head(10) %>%
ggplot(., aes(x=reorder(gym, -true_rating), y = true_rating)) +
geom_bar(stat = "identity", fill = 'midnightblue', color = 'black', alpha = .7)+
coord_flip()+
labs(y = 'Average Rating',
x = '',
title = 'Yelp Reviews by Gym Category')
yelp%>%
filter(., num_review > 50) %>%
group_by(., ID, gym) %>%
summarise(., true_rating = mean(rating)) %>%
arrange(., desc(true_rating)) %>%
head(10) %>%
ggplot(., aes(x=reorder(gym, -true_rating), y = true_rating)) +
geom_bar(stat = "identity", fill = 'midnightblue', color = 'black', alpha = .7)+
coord_flip()+
labs(y = 'Average Rating',
x = '',
title = 'Most Highly Rated Gyms')
runApp()
runApp()
runApp()
runApp()
yelp%>%
filter(., num_review > 100) %>%
group_by(., ID, gym) %>%
summarise(., true_rating = mean(rating)) %>%
arrange(., true_rating) %>%
head(10) %>%
ggplot(., aes(x=reorder(gym, -true_rating), y = true_rating)) +
geom_bar(stat = "identity", fill = 'midnightblue', color = 'black', alpha = .7)+
coord_flip()+
labs(y = 'Average Rating',
x = '',
title = 'Most Poorly Rated Gyms')
yelp%>%
filter(., num_review > 100) %>%
group_by(., ID, gym) %>%
summarise(., true_rating = mean(rating)) %>%
arrange(., true_rating) %>%
head(10) %>%
ggplot(., aes(x=reorder(gym, -true_rating), y = true_rating)) +
geom_bar(stat = "identity", fill = 'midnightblue', color = 'black', alpha = .7)+
coord_flip()+
labs(y = 'Average Rating',
x = '',
title = 'Most Poorly Rated Gyms')
yelp%>%
filter(., num_review > 100) %>%
group_by(., ID, gym) %>%
summarise(., true_rating = mean(rating)) %>%
arrange(., desc(true_rating)) %>%
head(10) %>%
ggplot(., aes(x=reorder(gym, -true_rating), y = true_rating)) +
geom_bar(stat = "identity", fill = 'midnightblue', color = 'black', alpha = .7)+
coord_flip()+
labs(y = 'Average Rating',
x = '',
title = 'Most Highly Rated Gyms')
yelp%>%
filter(., num_review > 200) %>%
group_by(., ID, gym) %>%
summarise(., true_rating = mean(rating)) %>%
arrange(., desc(true_rating)) %>%
head(10) %>%
ggplot(., aes(x=reorder(gym, -true_rating), y = true_rating)) +
geom_bar(stat = "identity", fill = 'midnightblue', color = 'black', alpha = .7)+
coord_flip()+
labs(y = 'Average Rating',
x = '',
title = 'Most Highly Rated Gyms')
yelp%>%
filter(., num_review > 200) %>%
group_by(., ID, gym) %>%
summarise(., true_rating = mean(rating)) %>%
arrange(., desc(true_rating)) %>%
head(10) %>%
ggplot(., aes(x=reorder(gym, true_rating), y = true_rating)) +
geom_bar(stat = "identity", fill = 'midnightblue', color = 'black', alpha = .7)+
coord_flip()+
labs(y = 'Average Rating',
x = '',
title = 'Most Highly Rated Gyms')
yelp%>%
filter(., num_review > 200) %>%
group_by(., ID, gym) %>%
summarise(., true_rating = mean(rating)) %>%
arrange(., true_rating) %>%
head(10) %>%
ggplot(., aes(x=reorder(gym, -true_rating), y = true_rating)) +
geom_bar(stat = "identity", fill = 'midnightblue', color = 'black', alpha = .7)+
coord_flip()+
labs(y = 'Average Rating',
x = '',
title = 'Most Poorly Rated Gyms')
yelp%>%
filter(., num_review > 100) %>%
group_by(., ID, gym) %>%
summarise(., true_rating = mean(rating)) %>%
arrange(., true_rating) %>%
head(10) %>%
ggplot(., aes(x=reorder(gym, -true_rating), y = true_rating)) +
geom_bar(stat = "identity", fill = 'midnightblue', color = 'black', alpha = .7)+
coord_flip()+
labs(y = 'Average Rating',
x = '',
title = 'Most Poorly Rated Gyms')
yelp%>%
filter(., num_review > 200) %>%
group_by(., ID, gym) %>%
summarise(., true_rating = mean(rating)) %>%
arrange(., desc(true_rating)) %>%
head(10) %>%
ggplot(., aes(x=reorder(gym, true_rating), y = true_rating)) +
geom_bar(stat = "identity", fill = 'midnightblue', color = 'black', alpha = .7)+
coord_flip()+
labs(y = 'Average Rating',
x = '',
title = 'Most Highly Rated Gyms')
yelp%>%
filter(., num_review > 200) %>%
group_by(., ID, gym) %>%
summarise(., true_rating = mean(rating)) %>%
arrange(., desc(true_rating)) %>%
head(10) %>%
ggplot(., aes(x=reorder(gym, true_rating), y = true_rating)) +
geom_bar(stat = "identity", fill = 'midnightblue', color = 'black', alpha = .7)+
coord_flip()+
labs(y = 'Average Rating',
x = '',
title = 'Most Highly Rated Gyms')
runApp()
runApp()
runApp()
yelp %>%
distinct(ID, .keep_all = TRUE) %>%
ggplot(aes(x = avg_rating))+
geom_bar(fill = 'midnightblue', color = 'black', alpha = .7)+
labs(x = "Ratings",
y = "# of Gyms",
title = "Distribution of Yelp Gym Ratings")
yelp %>%
distinct(ID, .keep_all = TRUE) %>%
ggplot(aes(x = avg_rating))+
geom_bar(fill = 'midnightblue', color = 'black', alpha = .7)+
labs(x = "Ratings",
y = "# of Gyms",
title = "Distribution of Yelp Gym Ratings")
runApp()
ggplot(t, aes(x = category, y = count, fill = as.factor(rating)))+
geom_bar(stat = 'identity', position = 'fill', alpha = .8)+
coord_flip()+
# this percent labeling requires scales package
theme(legend.title = element_blank(),
legend.position="top",
legend.direction="horizontal",
legend.key.width=unit(0.75, "cm"),
legend.key.height=unit(0.1, "cm"),
legend.margin=margin(0, 0, -0.1, -2, "cm"))+
scale_fill_manual(values=colors, labels = c("1 Star", "2 Star", "3 Star", "4 Star", "5 Star"))+
labs(y = 'Proportion of Reviews',
x = '',
title = 'Yelp Reviews by Gym Category')
colors = c(brewer.pal(9, 'PuBu')[c(5, 6, 7, 8, 9)])
t <- yelp %>%
# Group by category and sum the # of unique restaurants of each category
separate_rows(., category, sep = ",") %>%
group_by(category)%>%
mutate(t = n_distinct(ID))%>%
# Need to ungroup to filter down to the top 3/4's of the restaurants
ungroup()%>%
filter(t >= quantile(t, .10))%>%
# Now we regroup by category and star so we can calculate the total number
# of reviews category X had for 1, 2, 3, etc stars
# Looks as follows eg:
# Gym: 1 star, 1234 reviews
# Gym: 2 star, 1494 reviews
# Gym: 3 star, 2003 reviews
# Gym: 4 star, 2500 reviews
# Gym: 5 star, 750 reviews
group_by(category, rating)%>%
summarise(count = n())%>%
# redo grouping by just category
ungroup()%>%
group_by(category)%>%
# grab the avg rating for each category NOTE this way sucks, I need a better way to do it
mutate(working = rating*count, avg = sum(working)/sum(count))%>%
# clean up df
select(-working)%>%
# sort by categorey and rating
arrange(category, rating)
# Use the df created above to get a ranking of the categories by avg rating
# This is used to order the categories in the final plot
rankings <- t %>%
distinct(category, .keep_all = TRUE)%>%
select(category, avg)%>%
arrange(desc(avg))
# Reorder categories by avg so that you get the cascade effect seen in the final plot
t$category <- factor(t$category, levels = rev(rankings$category))
# actual plotting
ggplot(t, aes(x = category, y = count, fill = as.factor(rating)))+
geom_bar(stat = 'identity', position = 'fill', alpha = .8)+
coord_flip()+
# this percent labeling requires scales package
theme(legend.title = element_blank(),
legend.position="top",
legend.direction="horizontal",
legend.key.width=unit(0.75, "cm"),
legend.key.height=unit(0.1, "cm"),
legend.margin=margin(0, 0, -0.1, -2, "cm"))+
scale_fill_manual(values=colors, labels = c("1 Star", "2 Star", "3 Star", "4 Star", "5 Star"))+
labs(y = 'Proportion of Reviews',
x = '',
title = 'Yelp Reviews by Gym Category')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
